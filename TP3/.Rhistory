table(baskets[,"Hammers"])
table(baskets[,"Hammer"])
print(support1)
459/4541
table(baskets[,"Drill"])
table(baskets[,"Nails"])
table(baskets[,"Screws"])
2913/2087
2913/5000
2513/5000
table(baskets[,"Screwdriver"])
table(baskets[,"Wrench"])
719/5000
table(baskets[,"Level"])
356/5000
View(matrix_compare)
View(matrix_compare)
```{r}
first_item_prob = c(0.02, 0.2, 0.2, 0.2, 0.05, 0.01, 0.02, 0.3)
baskets = matrix(0, nrow=5000, ncol=8, dimnames=list(NULL, namesvec))
first_item <- sample.int(8, size = 5000, replace = TRUE, prob = first_item_prob)
baskets[cbind(1:5000,first_item)] = 1
```
We have now drawn the first item of the basket according to the probabilities that baskets[,first_itemswere given. We will now use the conditional probabilities we have computed to simulate the rest of the baskets.
```{r}
unif = matrix(runif(5000*8,0,1), nrow = 5000, ncol = 8)
matrix_compare = matrix(cond_probs[first_item,], nrow = 5000, ncol = 8, dimnames = list(NULL, namesvec))
table(baskets[,"Screws"])
table(baskets[,"Hammer"])
table(baskets[,"Nails"])
baskets <- (matrix_compare > unif) * 1
table(baskets[,"Screws"])
print(support1)
2994/5000
summary(unif)
matrix_compare > unif
first_item_prob = c(0.02, 0.2, 0.2, 0.2, 0.05, 0.01, 0.02, 0.3)
baskets = matrix(0, nrow=5000, ncol=8, dimnames=list(NULL, namesvec))
first_item <- sample.int(8, size = 5000, replace = TRUE, prob = first_item_prob)
baskets[cbind(1:5000,first_item)] = 1
```
We have now drawn the first item of the basket according to the probabilities that baskets[,first_itemswere given. We will now use the conditional probabilities we have computed to simulate the rest of the baskets.
```{r}
unif = matrix(runif(5000*8,0,1), nrow = 5000, ncol = 8)
matrix_compare = matrix(cond_probs[first_item,], nrow = 5000, ncol = 8, dimnames = list(NULL, namesvec))
baskets_save <- baskets
baskets <- (matrix_compare > unif) * 1
View(baskets_save)
View(baskets_save)
prop.table(table(baskets[,"Hammer"],baskets[,"Nails"]),1)
summary(baskets)
print(support1)
---
title: "Lab3"
output: pdf_document
author: Théo Lambert, William Didier
---
### Theoritical Calculations
## Question 1
cf feuille brouillon
## Question 2
```{r}
cond_probs <- read.table("~/Documents/Stats_Lambert/TP3/group13_CondProbs.csv", header=TRUE, sep=",", dec=".")
cond_probs <- data.matrix(cond_probs)
cond_probs <- cond_probs[, -1]
```
## Question 3
```{r}
# initialisation of the 1-support, 2-support
nobs <- dim(cond_probs)[1]
n <- dim(cond_probs)[2]
namesvec <- colnames(cond_probs)
support1 <- array(0,n)
support2 <-matrix(0, ncol=n, nrow=n, dimnames=list(namesvec, namesvec))
# conditions on support, confidence and lift
support_thresh <- 0.15
confidence_thresh <- 0.5
lift_thresh <- 1.1
# computing 1-support
for (i in 1:n) {
support1[i] <- sum(cond_probs[,i]/nobs)
}
View(support1)
# computing 2-support
for (i in 1:n) {
if (support1[i] >= support_thresh) {
for (j in i:n) {
if (support1[j]>=support_thresh) {
support2[i,j] <- cond_probs[,i]%*%cond_probs[,j]
support2[j,i] <- support2[i,j]
}
}
}
}
support2 <- support2/nobs
View(support2)
# computing confidence matrix
confidence2 <- support2/c(support1)
View(confidence2)
# computing lifting matrix
tmp <- matrix(c(support1), nrow=n, ncol=n, byrow=TRUE)
lift2 <- confidence2/tmp
View(lift2)
```
## Question 4
```{r}
rules_matrix <- (support2>=support_thresh)*(confidence2>=confidence_thresh)*(lift2>=lift_thresh)
diag(rules_matrix) <- 0
significant_rules <- NULL
for (i in 1:n) {
if (sum(rules_matrix[i,]) > 0) {
significant_rules <- c(significant_rules, paste(namesvec[i], "->", namesvec[rules_matrix[i,]==1], sep=""))
}
}
View(significant_rules)
```
## Question 5
The rules that we found are quite surprising, it seems more logical to buy jointly a hammer and nails, or a screwdriver and screws, in spite of jointly a hammer and a screwdriver, or a drill and screws.
### Data simulation and basket analysis of the simulated dataset
## Question 1
```{r}
set.seed(34567)
```
## Question 2
```{r}
first_item_prob = c(0.02, 0.2, 0.2, 0.2, 0.05, 0.01, 0.02, 0.3)
baskets = matrix(0, nrow=5000, ncol=8, dimnames=list(NULL, namesvec))
first_item <- sample.int(8, size = 5000, replace = TRUE, prob = first_item_prob)
baskets[cbind(1:5000,first_item)] = 1
```
We have now drawn the first item of the basket according to the probabilities that baskets[,first_itemswere given. We will now use the conditional probabilities we have computed to simulate the rest of the baskets.
```{r}
unif = matrix(runif(5000*8,0,1), nrow = 5000, ncol = 8)
matrix_compare = matrix(cond_probs[,first_item], nrow = 5000, ncol = 8, dimnames = list(NULL, namesvec))
baskets <- (matrix_compare > unif) * 1
"baskets[unif[,first_item] < cond_probs[first_item,]] = 1"
```
We defined two new matrixes : the first one, unif
summary(baskets)
print(support)
print(support1)
---
title: "Lab3"
output: pdf_document
author: Théo Lambert, William Didier
---
### Theoritical Calculations
## Question 1
cf feuille brouillon
## Question 2
```{r}
cond_probs <- read.table("~/Documents/Stats_Lambert/TP3/group13_CondProbs.csv", header=TRUE, sep=",", dec=".")
cond_probs <- data.matrix(cond_probs)
cond_probs <- cond_probs[, -1]
```
## Question 3
```{r}
# initialisation of the 1-support, 2-support
nobs <- dim(cond_probs)[1]
n <- dim(cond_probs)[2]
namesvec <- colnames(cond_probs)
first_item_prob <- c(0.02, 0.2, 0.2, 0.2, 0.05, 0.01, 0.02, 0.3)
support1 <- array(0,n)
support2 <- matrix(0, ncol=n, nrow=n, dimnames=list(namesvec, namesvec))
# conditions on support, confidence and lift
support_thresh <- 0.15
confidence_thresh <- 0.5
lift_thresh <- 1.1
# computing 1-support
support1 <- t(cond_probs)%*%first_item_prob
View(support1)
# computing 2-support
for (i in 1:n) {
if (support1[i] >= support_thresh) {
for (j in i:n) {
if (support1[j]>=support_thresh) {
support2[i,j] <- cond_probs[,i]%*%cond_probs[,j]
support2[j,i] <- support2[i,j]
}
}
}
}
support2 <- support2/nobs
View(support2)
# computing confidence matrix
confidence2 <- support2/c(support1)
View(confidence2)
# computing lifting matrix
tmp <- matrix(c(support1), nrow=n, ncol=n, byrow=TRUE)
lift2 <- confidence2/tmp
View(lift2)
```
## Question 4
```{r}
rules_matrix <- (support2>=support_thresh)*(confidence2>=confidence_thresh)*(lift2>=lift_thresh)
diag(rules_matrix) <- 0
significant_rules <- NULL
for (i in 1:n) {
if (sum(rules_matrix[i,]) > 0) {
significant_rules <- c(significant_rules, paste(namesvec[i], "->", namesvec[rules_matrix[i,]==1], sep=""))
}
}
View(significant_rules)
```
## Question 5
The rules that we found are quite surprising, it seems more logical to buy jointly a hammer and nails, or a screwdriver and screws, in spite of jointly a hammer and a screwdriver, or a drill and screws.
### Data simulation and basket analysis of the simulated dataset
## Question 1
```{r}
set.seed(34567)
```
## Question 2
```{r}
baskets = matrix(0, nrow=5000, ncol=8, dimnames=list(NULL, namesvec))
first_item <- sample.int(8, size = 5000, replace = TRUE, prob = first_item_prob)
baskets[cbind(1:5000,first_item)] = 1
```
We have now drawn the first item of the basket according to the probabilities that baskets[,first_itemswere given. We will now use the conditional probabilities we have computed to simulate the rest of the baskets.
```{r}
unif = matrix(runif(5000*8,0,1), nrow = 5000, ncol = 8)
matrix_compare = matrix(cond_probs[,first_item], nrow = 5000, ncol = 8, dimnames = list(NULL, namesvec))
baskets <- (matrix_compare > unif) * 1
"baskets[unif[,first_item] < cond_probs[first_item,]] = 1"
```
We defined two new matrixes : the first one, unif
summary(baskets)
table(baskets[,"Screws"])
table(baskets[,"Hammer"])
---
title: "Lab3"
output: pdf_document
author: Théo Lambert, William Didier
---
### Theoritical Calculations
## Question 1
cf feuille brouillon
## Question 2
```{r}
cond_probs <- read.table("~/Documents/Stats_Lambert/TP3/group13_CondProbs.csv", header=TRUE, sep=",", dec=".")
cond_probs <- data.matrix(cond_probs)
cond_probs <- cond_probs[, -1]
```
## Question 3
```{r}
# initialisation of the 1-support, 2-support
nobs <- dim(cond_probs)[1]
n <- dim(cond_probs)[2]
namesvec <- colnames(cond_probs)
first_item_prob <- c(0.02, 0.2, 0.2, 0.2, 0.05, 0.01, 0.02, 0.3)
support1 <- array(0,n)
support2 <- matrix(0, ncol=n, nrow=n, dimnames=list(namesvec, namesvec))
# conditions on support, confidence and lift
support_thresh <- 0.15
confidence_thresh <- 0.5
lift_thresh <- 1.1
# computing 1-support
support1 <- t(cond_probs)%*%first_item_prob
View(support1)
# computing 2-support
for (i in 1:n) {
if (support1[i] >= support_thresh) {
for (j in i:n) {
if (support1[j]>=support_thresh) {
support2[i,j] <- cond_probs[,i]%*%cond_probs[,j]
support2[j,i] <- support2[i,j]
}
}
}
}
support2 <- support2/nobs
View(support2)
# computing confidence matrix
confidence2 <- support2/c(support1)
View(confidence2)
# computing lifting matrix
tmp <- matrix(c(support1), nrow=n, ncol=n, byrow=TRUE)
lift2 <- confidence2/tmp
View(lift2)
```
## Question 4
```{r}
rules_matrix <- (support2>=support_thresh)*(confidence2>=confidence_thresh)*(lift2>=lift_thresh)
diag(rules_matrix) <- 0
significant_rules <- NULL
for (i in 1:n) {
if (sum(rules_matrix[i,]) > 0) {
significant_rules <- c(significant_rules, paste(namesvec[i], "->", namesvec[rules_matrix[i,]==1], sep=""))
}
}
View(significant_rules)
```
## Question 5
The rules that we found are quite surprising, it seems more logical to buy jointly a hammer and nails, or a screwdriver and screws, in spite of jointly a hammer and a screwdriver, or a drill and screws.
### Data simulation and basket analysis of the simulated dataset
## Question 1
```{r}
set.seed(34567)
```
## Question 2
```{r}
baskets = matrix(0, nrow=5000, ncol=8, dimnames=list(NULL, namesvec))
first_item <- sample.int(8, size = 5000, replace = TRUE, prob = first_item_prob)
baskets[cbind(1:5000,first_item)] = 1
```
We have now drawn the first item of the basket according to the probabilities that baskets[,first_itemswere given. We will now use the conditional probabilities we have computed to simulate the rest of the baskets.
```{r}
unif = matrix(runif(5000*8,0,1), nrow = 5000, ncol = 8)
matrix_compare = matrix(cond_probs[,first_item], nrow = 5000, ncol = 8, dimnames = list(NULL, namesvec))
baskets <- (matrix_compare > unif) * 1
"baskets[unif[,first_item] < cond_probs[first_item,]] = 1"
```
We defined two new matrixes : the first one, unif
---
title: "Lab3"
output: pdf_document
author: Théo Lambert, William Didier
---
### Theoritical Calculations
## Question 1
cf feuille brouillon
## Question 2
```{r}
cond_probs <- read.table("~/Applied_Probabilities/TP3/group13_CondProbs.csv", header=TRUE, sep=",", dec=".")
cond_probs <- data.matrix(cond_probs)
cond_probs <- cond_probs[, -1]
```
## Question 3
```{r}
# initialisation of the 1-support, 2-support
nobs <- dim(cond_probs)[1]
n <- dim(cond_probs)[2]
namesvec <- colnames(cond_probs)
first_item_prob <- c(0.02, 0.2, 0.2, 0.2, 0.05, 0.01, 0.02, 0.3)
support1 <- array(0,n)
support2 <- matrix(0, ncol=n, nrow=n, dimnames=list(namesvec, namesvec))
# conditions on support, confidence and lift
support_thresh <- 0.15
confidence_thresh <- 0.5
lift_thresh <- 1.1
# computing 1-support
support1 <- t(cond_probs)%*%first_item_prob
View(support1)
# computing 2-support
for (i in 1:n) {
if (support1[i] >= support_thresh) {
for (j in i:n) {
if (support1[j]>=support_thresh) {
support2[i,j] <- cond_probs[,i]%*%cond_probs[,j]
support2[j,i] <- support2[i,j]
}
}
}
}
support2 <- support2/nobs
View(support2)
# computing confidence matrix
confidence2 <- support2/c(support1)
View(confidence2)
# computing lifting matrix
tmp <- matrix(c(support1), nrow=n, ncol=n, byrow=TRUE)
lift2 <- confidence2/tmp
View(lift2)
```
## Question 4
```{r}
rules_matrix <- (support2>=support_thresh)*(confidence2>=confidence_thresh)*(lift2>=lift_thresh)
diag(rules_matrix) <- 0
significant_rules <- NULL
for (i in 1:n) {
if (sum(rules_matrix[i,]) > 0) {
significant_rules <- c(significant_rules, paste(namesvec[i], "->", namesvec[rules_matrix[i,]==1], sep=""))
}
}
View(significant_rules)
```
## Question 5
The rules that we found are quite surprising, it seems more logical to buy jointly a hammer and nails, or a screwdriver and screws, in spite of jointly a hammer and a screwdriver, or a drill and screws.
### Data simulation and basket analysis of the simulated dataset
## Question 1
```{r}
set.seed(34567)
```
## Question 2
```{r}
baskets = matrix(0, nrow=5000, ncol=8, dimnames=list(NULL, namesvec))
first_item <- sample.int(8, size = 5000, replace = TRUE, prob = first_item_prob)
baskets[cbind(1:5000,first_item)] = 1
```
We have now drawn the first item of the basket according to the probabilities that baskets[,first_itemswere given. We will now use the conditional probabilities we have computed to simulate the rest of the baskets.
```{r}
unif = matrix(runif(5000*8,0,1), nrow = 5000, ncol = 8)
matrix_compare = matrix(cond_probs[,first_item], nrow = 5000, ncol = 8, dimnames = list(NULL, namesvec))
baskets <- (matrix_compare > unif) * 1
"baskets[unif[,first_item] < cond_probs[first_item,]] = 1"
```
We defined two new matrixes : the first one, unif
summary(baskets)
0<1
(0<1) * 1
(0<-1) * 1
(0< -1) * 1
View(matrix_compare)
---
title: "Lab3"
output: pdf_document
author: Théo Lambert, William Didier
---
### Theoritical Calculations
## Question 1
cf feuille brouillon
## Question 2
```{r}
cond_probs <- read.table("~/Applied_Probabilities/TP3/group13_CondProbs.csv", header=TRUE, sep=",", dec=".")
cond_probs <- data.matrix(cond_probs)
cond_probs <- cond_probs[, -1]
```
## Question 3
```{r}
# initialisation of the 1-support, 2-support
nobs <- dim(cond_probs)[1]
n <- dim(cond_probs)[2]
namesvec <- colnames(cond_probs)
first_item_prob <- c(0.02, 0.2, 0.2, 0.2, 0.05, 0.01, 0.02, 0.3)
support1 <- array(0,n)
support2 <- matrix(0, ncol=n, nrow=n, dimnames=list(namesvec, namesvec))
# conditions on support, confidence and lift
support_thresh <- 0.15
confidence_thresh <- 0.5
lift_thresh <- 1.1
# computing 1-support
support1 <- t(cond_probs)%*%first_item_prob
View(support1)
# computing 2-support
for (i in 1:n) {
if (support1[i] >= support_thresh) {
for (j in i:n) {
if (support1[j]>=support_thresh) {
support2[i,j] <- cond_probs[,i]%*%cond_probs[,j]
support2[j,i] <- support2[i,j]
}
}
}
}
support2 <- support2/nobs
View(support2)
# computing confidence matrix
confidence2 <- support2/c(support1)
View(confidence2)
# computing lifting matrix
tmp <- matrix(c(support1), nrow=n, ncol=n, byrow=TRUE)
lift2 <- confidence2/tmp
View(lift2)
```
## Question 4
```{r}
rules_matrix <- (support2>=support_thresh)*(confidence2>=confidence_thresh)*(lift2>=lift_thresh)
diag(rules_matrix) <- 0
significant_rules <- NULL
for (i in 1:n) {
if (sum(rules_matrix[i,]) > 0) {
significant_rules <- c(significant_rules, paste(namesvec[i], "->", namesvec[rules_matrix[i,]==1], sep=""))
}
}
View(significant_rules)
```
## Question 5
The rules that we found are quite surprising, it seems more logical to buy jointly a hammer and nails, or a screwdriver and screws, rather than jointly a hammer and a screwdriver, or a drill and screws.
### Data simulation and basket analysis of the simulated dataset
## Question 1
```{r}
set.seed(34567)
```
## Question 2
```{r}
baskets = matrix(0, nrow=5000, ncol=8, dimnames=list(NULL, namesvec))
first_item <- sample.int(8, size = 5000, replace = TRUE, prob = first_item_prob)
baskets[cbind(1:5000,first_item)] = 1
```
baskets_save <- baskets
unif = matrix(runif(5000*8,0,1), nrow = 5000, ncol = 8)
matrix_compare = matrix(cond_probs[,first_item], nrow = 5000, ncol = 8, dimnames = list(NULL, namesvec))
baskets <- (matrix_compare > unif) * 1
"baskets[unif[,first_item] < cond_probs[first_item,]] = 1"
View(baskets_save)
View(unif)
summary(unif)
Vix(cond_probs)
View(cond_probs)
View(first_tem)
View(first_item)
first_item
cond_probs[,c(1,2,3)]
cond_probs[c(1,2,3),]
baskets = matrix(0, nrow=5000, ncol=8, dimnames=list(NULL, namesvec))
first_item <- sample.int(8, size = 5000, replace = TRUE, prob = first_item_prob)
baskets[cbind(1:5000,first_item)] = 1
```
We have now drawn the first item of the basket according to the probabilities that were given. We will now use the conditional probabilities we have computed to simulate the rest of the baskets.
```{r}
unif = matrix(runif(5000*8,0,1), nrow = 5000, ncol = 8)
matrix_compare = matrix(cond_probs[first_item,], nrow = 5000, ncol = 8, dimnames = list(NULL, namesvec))
baskets <- (matrix_compare > unif) * 1
"baskets[unif[,first_item] < cond_probs[first_item,]] = 1"
```
summary(baskets)
support1
mean(baskets)
colMeans(baskets)
colMeans(baskets)[0]
colMeans(baskets)
a <- colMeans(baskets)
a
